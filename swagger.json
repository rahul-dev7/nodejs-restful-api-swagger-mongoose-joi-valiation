{
    "swagger": "2.0",
    "info": {
        "description": "NodeJS API project ",
        "version": "1.0.0",
        "title": "Tasks API",
        "contact": {
            "email": "rahul.info567@gmail.com"
        }
    },
    "schemes": ["http", "https"],
    "host": "localhost:3000",
    "basePath": "/api",
    "paths" : {  
        "/register" : {
            "post" : {
                "tags": ["Auth"],
                "summary" : "Register the user",
                "description": "Register the user",
                "produces": ["application/json"],
                "consumes": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "todo object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "firstname": {
                                    "type": "string"
                                },
                                "lastname": {
                                    "type": "string"
                                },
                                "email": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                }                                 
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/todosResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "failed operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ErrorResponse"
                            }
                        }
                    }
                }
            }
        },
        "/login" : {
            "post" : {
                "tags": ["Auth"],
                "summary" : "Login the user",
                "description": "Login the user",
                "produces": ["application/json"],
                "consumes": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "todo object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "email": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                }                                 
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LoginResponse"
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ErrorResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid Input",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ErrorResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "failed operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ErrorResponse"
                            }
                        }
                    }
                }
            }
        },
        "/refreshToken" : {
            "post" : {
                "tags": ["Auth"],
                "summary" : "Refresh the token",
                "description": "Refresh the token",
                "produces": ["application/json"],
                "consumes": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "todo object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "token": {
                                    "type": "string"
                                }                            
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LoginResponse"
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ErrorResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid Input",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ErrorResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "failed operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ErrorResponse"
                            }
                        }
                    }
                }
            }
        },
        "/logout" : {
            "delete" : {
                "tags": ["Auth"],
                "summary" : "Logout the user",
                "description": "Logout the user",
                "produces": ["application/json"],
                "consumes": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "todo object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "token": {
                                    "type": "string"
                                }                            
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SuccessResponse"
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ErrorResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "failed operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ErrorResponse"
                            }
                        }
                    }
                }
            }
        },
        "/todos" : {
            "get" : {
                "tags": ["Todo CRUD operations"],
                "summary" : "Get all the todos",
                "description": "Get all the todos",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "todo id that needs to be deleted",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/todosResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    }
                }
            }
        },
        "/todos/create-todo" : {
            "post" : {
                "tags": ["Todo CRUD operations"],
                "summary" : "Save the todo",
                "description": "Save the todo",
                "produces": ["application/json"],
                "consumes": ["application/json"],
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "todo id that needs to be deleted",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "todo object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "title": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "user": {
                                    "type": "string"
                                }
                                 
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/todosResponse"
                            }
                        }
                    }
                }
            }
        },
        "/todos/{id}" : {
            "put" : {
                "tags": ["Todo CRUD operations"],
                "summary" : "Update the todo",
                "description": "Update the todo",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "todo id that needs to be deleted",
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "todo id that needs to be deleted",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "todo object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "title": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "user": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/todosResponse"
                            }
                        }
                    },
                    
                    "400": {
                        "description": "Invalid status value",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    }
                }
            }
        }, 
        "/todos/{id}/delete" : {
            "delete" : {
                "tags": ["Todo CRUD operations"],
                "summary" : "Delete the todo",
                "description": "Delete the todo",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "todo id that needs to be deleted",
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "todo id that needs to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/todosResponse"
                            }
                        }
                    },
                    
                    "400": {
                        "description": "Invalid status value",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    }
                }
            }
        }
    }, 
    "definitions": {
        "todosResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "data": {
                    "type": "string"
                }
            }
        },
        "LoginResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            }
        },
        "Todo": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "user": {
                    "type": "string" 
                }
            }
        },
        "SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "data": {
                    "type": "string"
                }
            }
        },
        "InvalidResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                }
            }

        },
        "ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                }
            }

        }
    }
}